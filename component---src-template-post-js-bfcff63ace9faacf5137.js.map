{"version":3,"sources":["webpack:///./src/template/post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_styles_blog_template_module_scss__WEBPACK_IMPORTED_MODULE_4__","_styles_blog_template_module_scss__WEBPACK_IMPORTED_MODULE_4___default","MarkdownPost","props","slug","data","console","log","_data$markdownRemark$","markdownRemark","frontmatter","title","createdAt","featureImage","html","tags","a","createElement","page","description","className","blogTemplate","blogTemplate__h5","src","childImageSharp","fluid","blogTemplate__img","blogTemplate__blog","dangerouslySetInnerHTML","__html","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","Header","siteTitle","header","_1104732768","react_default","headerModule","navbar__purple","gatsby_browser_entry","navbarBrand__white","to","site","siteMetadata","navbar__toggle_button","type","data-toggle","data-target","id","navlink__purple","Layout","children","comp","components_header","SEO","_site$siteMetadata","_public_static_d_2516513492_json__WEBPACK_IMPORTED_MODULE_0__","host","seo","image","url","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3__","titleTemplate","name","content","property","article","twitterUsername","bool","defaultProps"],"mappings":"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","file":"component---src-template-post-js-bfcff63ace9faacf5137.js","sourcesContent":["import React from 'react'\r\n\r\nimport { graphql,Link } from 'gatsby'\r\nimport SEO from \"../components/seo\";\r\nimport Layout from '../components/layout'\r\nimport blogTemplate from \"../styles/blog-template.module.scss\";\r\nexport const query = graphql`\r\n  query ($slug: String!) {\r\n    markdownRemark (fields: {\r\n      slug: {\r\n        eq: $slug\r\n      }\r\n    }) {\r\n      frontmatter {\r\n        title\r\n        createdAt\r\n        featureImage {\r\n          childImageSharp {\r\n            fluid(maxWidth:800){\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n      html\r\n    }\r\n  }\r\n`\r\nconst MarkdownPost = (props) => {\r\n  let { slug, data } = props;\r\n  console.log(data);\r\n  const { title, createdAt, featureImage, tags } = data.markdownRemark.frontmatter\r\n  const { html } = data.markdownRemark\r\n  console.log(props);\r\n  return (\r\n    <Layout page={title}>\r\n    <SEO\r\n          title={`blog - ${title}`}\r\n          description={`blog on ${title}`}\r\n    />\r\n      <div className={`container ${blogTemplate.blogTemplate}`}>\r\n      <header>\r\n      <h1><strong>{title}</strong></h1>\r\n      <h5 className={`${blogTemplate.blogTemplate__h5}`}>{createdAt}</h5>\r\n      </header>\r\n      <div className=\"text-center\">\r\n      {featureImage?<img src={`${featureImage.childImageSharp.fluid.src}`} className={`img-responsive ${blogTemplate.blogTemplate__img}`} />:null}\r\n      </div>\r\n      <div className={`${blogTemplate.blogTemplate__blog}`} dangerouslySetInnerHTML={{ __html: html }}></div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default MarkdownPost","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport headerModule from \"../styles/header.module.scss\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nconst Header = ({ siteTitle, header }) => {\r\n  \r\n\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      allFile(filter: { extension: { eq: \"pdf\" } }) {\r\n        edges {\r\n          node {\r\n            publicURL\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-md ${headerModule.navbar__purple}`}>\r\n      <Link className={`navbar-brand ${headerModule.navbarBrand__white}`} to=\"/\">\r\n          {data.site.siteMetadata.title}\r\n      </Link>\r\n\r\n      <button\r\n        className={`navbar-toggler ${headerModule.navbar__toggle_button}`}\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#collapsibleNavbar\"\r\n      >\r\n        menu\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/projects\">\r\n              projects\r\n          </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/blog\">\r\n              blog\r\n          </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/experience\">\r\n              experience\r\n          </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/about\">\r\n              about\r\n          </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nimport Header from \"./header\"\r\n\r\nconst Layout = ({ children, comp, header }) => {\r\n  return (\r\n    <div>\r\n      <Header header={header} />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst SEO = props => {\r\n  const query = graphql`\r\n    query SEO {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  `\r\n  const { site } = useStaticQuery(query)\r\n\r\n  const { title, description, host } = site.siteMetadata\r\n\r\n  const seo = {\r\n    title: props.title || title,\r\n    description: props.description || description,\r\n    image: `${host}${props.image || null}`,\r\n    url: `${host}${props.pathname || null}`,\r\n  }\r\n\r\n  return (\r\n    <Helmet title={seo.title} titleTemplate={seo.title}>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n\r\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\r\n\r\n      {(props.article ? true : null) && (\r\n        <meta property=\"og:type\" content=\"article\" />\r\n      )}\r\n\r\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\r\n\r\n      {seo.description && (\r\n        <meta property=\"og:description\" content={seo.description} />\r\n      )}\r\n\r\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\r\n\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n\r\n      {props.twitterUsername && (\r\n        <meta name=\"twitter:creator\" content={props.twitterUsername} />\r\n      )}\r\n\r\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\r\n\r\n      {seo.description && (\r\n        <meta name=\"twitter:description\" content={seo.description} />\r\n      )}\r\n\r\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default SEO\r\n\r\nSEO.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  image: PropTypes.string,\r\n  article: PropTypes.bool,\r\n}\r\n\r\nSEO.defaultProps = {\r\n  title: null,\r\n  description: null,\r\n  image: null,\r\n  article: false,\r\n}\r\n"],"sourceRoot":""}