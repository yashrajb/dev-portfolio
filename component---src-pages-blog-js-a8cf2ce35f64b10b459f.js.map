{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Blog","data","_public_static_d_1458885208_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","site","siteMetadata","author","description","className","allMarkdownRemark","edges","map","item","test","node","fileAbsolutePath","blogModule","blog__element","frontmatter","toUpperCase","date","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","blog_readmore","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","Header","siteTitle","header","_245434667","react_default","headerModule","navbar__purple","gatsby_browser_entry","navbarBrand__white","navbar__toggle_button","type","data-toggle","data-target","id","navlink__purple","Layout","children","comp","components_header","SEO","props","_site$siteMetadata","_public_static_d_2516513492_json__WEBPACK_IMPORTED_MODULE_0__","host","seo","image","url","react_helmet__WEBPACK_IMPORTED_MODULE_3__","titleTemplate","name","content","property","article","twitterUsername","bool","defaultProps"],"mappings":"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","file":"component---src-pages-blog-js-a8cf2ce35f64b10b459f.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\";\r\nimport { graphql, useStaticQuery, Link } from \"gatsby\"\r\nimport blogModule from \"../styles/blog.module.scss\"\r\n\r\nconst Blog = () => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              title\r\n              date\r\n            }\r\n            html\r\n            excerpt\r\n            fields {\r\n              slug\r\n            }\r\n            fileAbsolutePath\r\n          }\r\n        }\r\n      }\r\n      site{\r\n        siteMetadata {\r\n          author\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n      <Layout>\r\n        <SEO title={`blog of ${data.site.siteMetadata.author}`} description={`blog on ${data.site.siteMetadata.author}`}/>\r\n        <div className={`container`}>\r\n            {data.allMarkdownRemark.edges.map(item => {\r\n              var patt = /posts/\r\n              if (patt.test(item.node.fileAbsolutePath)) {\r\n                return (\r\n                  <div className={`row ${blogModule.blog__element}`}>\r\n                    <div className={`col-md-12 col-xs-12 col-sm-12 col-lg-12 col-xl-12`}>\r\n                      <h2>{item.node.frontmatter.title.toUpperCase()}</h2>\r\n                      <p>{item.node.frontmatter.date}</p>\r\n                      <Link\r\n                        to={`/blog/${item.node.fields.slug}`}\r\n                        className={`btn btn-default ${blogModule.blog_readmore}`}\r\n                      >\r\n                        Read More\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n              return null\r\n            })}\r\n        </div>\r\n      </Layout>\r\n  )\r\n}\r\n\r\nexport default Blog","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport headerModule from \"../styles/header.module.scss\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nconst Header = ({ siteTitle, header }) => {\r\n  \r\n\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          logo\r\n        }\r\n      }\r\n      allFile(filter: { extension: { eq: \"pdf\" } }) {\r\n        edges {\r\n          node {\r\n            publicURL\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-md ${headerModule.navbar__purple}`}>\r\n      <Link className={`navbar-brand ${headerModule.navbarBrand__white}`} to=\"/\">\r\n          {data.site.siteMetadata.title}\r\n      </Link>\r\n\r\n      <button\r\n        className={`navbar-toggler ${headerModule.navbar__toggle_button}`}\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#collapsibleNavbar\"\r\n      >\r\n        menu\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/projects\">\r\n              projects\r\n          </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/experience\">\r\n              experience\r\n          </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/blog\">\r\n              blog\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/about\">\r\n              about\r\n          </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nimport Header from \"./header\"\r\n\r\nconst Layout = ({ children, comp, header }) => {\r\n  return (\r\n    <div>\r\n      <Header header={header} />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst SEO = props => {\r\n  const query = graphql`\r\n    query SEO {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  `\r\n  const { site } = useStaticQuery(query)\r\n\r\n  const { title, description, host } = site.siteMetadata\r\n\r\n  const seo = {\r\n    title: props.title || title,\r\n    description: props.description || description,\r\n    image: `${host}${props.image || null}`,\r\n    url: `${host}${props.pathname || null}`,\r\n  }\r\n\r\n  return (\r\n    <Helmet title={seo.title} titleTemplate={seo.title}>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n\r\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\r\n\r\n      {(props.article ? true : null) && (\r\n        <meta property=\"og:type\" content=\"article\" />\r\n      )}\r\n\r\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\r\n\r\n      {seo.description && (\r\n        <meta property=\"og:description\" content={seo.description} />\r\n      )}\r\n\r\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\r\n\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n\r\n      {props.twitterUsername && (\r\n        <meta name=\"twitter:creator\" content={props.twitterUsername} />\r\n      )}\r\n\r\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\r\n\r\n      {seo.description && (\r\n        <meta name=\"twitter:description\" content={seo.description} />\r\n      )}\r\n\r\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default SEO\r\n\r\nSEO.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  image: PropTypes.string,\r\n  article: PropTypes.bool,\r\n}\r\n\r\nSEO.defaultProps = {\r\n  title: null,\r\n  description: null,\r\n  image: null,\r\n  article: false,\r\n}\r\n"],"sourceRoot":""}