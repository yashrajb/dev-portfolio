{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Projects","props","data","_2867553639","console","log","react_default","a","createElement","layout","header","seo","title","site","siteMetadata","author","description","className","blogModule","container","allMarkdownRemark","edges","map","edge","_edge$node$frontmatte","node","frontmatter","createdAt","row","class","blog__text","h3","blog__subheadline","excerpt","gatsby_browser_entry","blog__readmore","to","fields","slug","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","Header","siteTitle","_1104732768","headerModule","navbar__purple","navbarBrand__white","id","navlink__purple","download","href","download___resume","Layout","children","comp","components_header","SEO","_site$siteMetadata","_public_static_d_2516513492_json__WEBPACK_IMPORTED_MODULE_0__","host","image","url","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3__","titleTemplate","name","content","property","article","twitterUsername","bool","defaultProps"],"mappings":"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","file":"component---src-pages-blog-js-1aaa42b372a2909bfbe3.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport blogModule from \"../styles/blog.module.scss\"\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\nimport {getParams} from \"../util\";\r\nconst Projects = props => {\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      {\r\n        allMarkdownRemark(\r\n          sort: { fields: [frontmatter___createdAt], order: DESC }\r\n          filter: {\r\n            fileAbsolutePath: { regex: \"/posts/\" } \r\n          }\r\n          ) {\r\n          edges {\r\n            node {\r\n              frontmatter {\r\n                title\r\n                createdAt\r\n                featureImage {\r\n                  childImageSharp {\r\n                    fluid(maxWidth:800){\r\n                      ...GatsbyImageSharpFluid\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              fields {\r\n                slug\r\n              }\r\n              excerpt(pruneLength: 350)\r\n            }\r\n          }\r\n        }\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      <Layout header=\"white\">\r\n        <SEO\r\n          title={`${data.site.siteMetadata.author} blog`}\r\n          description={`projects of ${data.site.siteMetadata.author}`}\r\n        />\r\n          <div className={blogModule.container}> \r\n            {data.allMarkdownRemark.edges.map(edge => {\r\n              let {title,createdAt} = edge.node.frontmatter;\r\n              return (\r\n                <div className={`row ${blogModule.row}`}>\r\n                  <div class=\"col s12 m1 l2\"></div>\r\n                  <div\r\n                    className={`col s12 m9 l8 ${\r\n                      blogModule.blog__text\r\n                    }`}\r\n                  >\r\n                    <h3 className={blogModule.h3}>\r\n                      {title}\r\n                    </h3>\r\n                    <h5 className={blogModule.createdAt}>\r\n                      {createdAt}\r\n                    </h5>\r\n                  <p className={blogModule.blog__subheadline}>{edge.node.excerpt}</p>\r\n                    <p><Link\r\n                      className={`btn btn-default ${blogModule.blog__readmore}`}\r\n                      to={`/blog/${edge.node.fields.slug}`}\r\n                    >\r\n                      Read More\r\n                    </Link>{\" \"}</p>\r\n                  </div>\r\n                  <div class=\"col s12 m2 l2\"></div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        \r\n      </Layout>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport headerModule from \"../styles/header.module.scss\"\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nconst Header = ({ siteTitle, header }) => {\r\n  \r\n\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      allFile(filter: { extension: { eq: \"pdf\" } }) {\r\n        edges {\r\n          node {\r\n            publicURL\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n   console.log(data);\r\n  return (\r\n    <nav className={`navbar navbar-expand-md ${headerModule.navbar__purple}`}>\r\n      {/* <Link className={`navbar-brand ${headerModule.navbarBrand__white}`} to=\"/\">\r\n          {data.site.siteMetadata.title}\r\n      </Link>\r\n\r\n      <button\r\n        className={`navbar-toggler ${headerModule.navbar__toggle_button}`}\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#collapsibleNavbar\"\r\n      >\r\n        menu\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/projects\">\r\n              projects\r\n          </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/blog\">\r\n              blog\r\n          </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/experience\">\r\n              experience\r\n          </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link className={`nav-link ${headerModule.navlink__purple}`} to=\"/about\">\r\n              about\r\n          </Link>\r\n          </li>\r\n        </ul>\r\n      </div> */}\r\n    <div class=\"nav-wrapper\">\r\n      \r\n      <Link className={`${headerModule.navbarBrand__white}`} to=\"/\">\r\n        {data.site.siteMetadata.title}\r\n      </Link>\r\n    \r\n      <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n      <li>\r\n        <Link className={`${headerModule.navlink__purple}`} to=\"/projects\">\r\n          projects\r\n        </Link>\r\n      </li>\r\n        <li>\r\n        <Link className={`${headerModule.navlink__purple}`} to=\"/blog\">\r\n              blog\r\n          </Link>\r\n        </li>\r\n        <li>\r\n        <Link className={`${headerModule.navlink__purple}`} to=\"/experience\">\r\n              experience\r\n          </Link>\r\n        </li>\r\n        <li>\r\n        <Link className={`${headerModule.navlink__purple}`} to=\"/about\">\r\n              about\r\n          </Link>\r\n        </li>\r\n        <li>\r\n        {<a download href={`/yashraj-basan-full-stack-developer-PIET.pdf`} class={`btn ${headerModule.download___resume}`}>\r\n            Download Resume\r\n          </a>}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport 'antd/dist/antd.css';\r\nimport Header from \"./header\"\r\n\r\nconst Layout = ({ children, comp, header }) => {\r\n  return (\r\n    <div>\r\n      <Header header={header} />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst SEO = props => {\r\n  const query = graphql`\r\n    query SEO {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  `\r\n  const { site } = useStaticQuery(query)\r\n\r\n  const { title, description, host } = site.siteMetadata\r\n\r\n  const seo = {\r\n    title: props.title || title,\r\n    description: props.description || description,\r\n    image: `${host}${props.image || null}`,\r\n    url: `${host}${props.pathname || null}`,\r\n  }\r\n\r\n  return (\r\n    <Helmet title={seo.title} titleTemplate={seo.title}>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n\r\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\r\n\r\n      {(props.article ? true : null) && (\r\n        <meta property=\"og:type\" content=\"article\" />\r\n      )}\r\n\r\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\r\n\r\n      {seo.description && (\r\n        <meta property=\"og:description\" content={seo.description} />\r\n      )}\r\n\r\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\r\n\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n\r\n      {props.twitterUsername && (\r\n        <meta name=\"twitter:creator\" content={props.twitterUsername} />\r\n      )}\r\n\r\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\r\n\r\n      {seo.description && (\r\n        <meta name=\"twitter:description\" content={seo.description} />\r\n      )}\r\n\r\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default SEO\r\n\r\nSEO.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  image: PropTypes.string,\r\n  article: PropTypes.bool,\r\n}\r\n\r\nSEO.defaultProps = {\r\n  title: null,\r\n  description: null,\r\n  image: null,\r\n  article: false,\r\n}\r\n"],"sourceRoot":""}